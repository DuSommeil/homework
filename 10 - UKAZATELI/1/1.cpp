// Дана строка в динамической памяти, содержащая полное имя файла, т.е. имя диска, 
// список каталогов (путь), собственно имя и расширение. 
// Выделить из этой строки имя файла (без расширения).

#include <iostream>
#include <string>
#include <stdlib.h>

int main() 
{
    // Динамическое выделение памяти для строки
    char* fullPath = (char*)malloc(256 * sizeof(char));
    
    if (fullPath == NULL) 
    {
        printf("Ошибка выделения памяти\n");
        return 1;
    }

    // Вводим полный путь
    printf("Введите полный путь к файлу (с диском, каталогами и расширением): ");
    fgets(fullPath, 256, stdin);

    // Убираем символ новой строки, если он присутствует
    fullPath[strcspn(fullPath, "\n")] = '\0';

    // Находим последний символ '/' или '\\' (для разных операционных систем)
    char* lastSlash = strrchr(fullPath, '/');
    if (lastSlash == NULL) 
    {
        lastSlash = strrchr(fullPath, '\\');
    }

    // Если '/' или '\\' не найден, значит путь не содержит каталогов
    char* fileName;
    if (lastSlash != NULL) 
    {
        fileName = lastSlash + 1; // Имя файла после последнего разделителя
    } else {
        fileName = fullPath; // Если нет разделителей, всё это путь к файлу
    }

    // Находим точку, которая разделяет имя файла и его расширение
    char* dotPos = strrchr(fileName, '.');

    // Если точка найдена, обрезаем имя файла до этой точки (удаляем расширение)
    if (dotPos != NULL) 
    {
        *dotPos = '\0';
    }

    // Выводим имя файла без расширения
    printf("Имя файла без расширения: %s\n", fileName);

    // Освобождаем память.
    free(fullPath);

    return 0;
}